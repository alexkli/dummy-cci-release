#
# ADOBE CONFIDENTIAL
# __________________
#
# Copyright 2019 Adobe Systems Incorporated
# All Rights Reserved.
#
# NOTICE:  All information contained herein is, and remains
# the property of Adobe Systems Incorporated and its suppliers,
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Adobe Systems Incorporated and its
# suppliers and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Adobe Systems Incorporated.
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

ssh_keys: &ssh_keys
  add_ssh_keys:
    fingerprints:
      - "98:db:59:8c:95:ec:31:3b:ad:d4:8e:a7:c5:6d:57:8f"

test_results_build: &test_results_build
  # Unit-Test-reports for modules without action folder
  store_test_results:
    path: build
test_results_ac_build: &test_results_ac_build
  # Test-reports for modules with action folder
  store_test_results:
    path: action/build
test_logs_ac_bld: &test_logs_ac_bld
  # Test-logs for modules with action folder
  store_artifacts:
    path: action/build
    destination: build
test_logs_bld: &test_logs_bld
  # Test-logs for modules without action folder
  store_artifacts:
    path: build
    destination: build  
test_logs_ac_nui: &test_logs_ac_nui
  # Test-logs for modules with action folder for image comparision
  store_artifacts:
    path: action/.nui
    destination: .nui
coverage: &coverage
  # Coverage-report
  store_artifacts:
    path: coverage
    destination: coverage

version: 2

commands:
  artifactory_login: &artifactory_login
    run:
      name: Artifactory credentials setup
      command: |
        curl --fail -s -u${ARTIFACTORY_USER}:${ARTIFACTORY_TOKEN} https://artifactory.corp.adobe.com/artifactory/api/npm/npm-nui-release-local/auth/nui >> ~/.npmrc
        # this was added only for core repo
        curl --fail -s -u${ARTIFACTORY_USER}:${ARTIFACTORY_TOKEN} https://artifactory.corp.adobe.com/artifactory/api/npm/npm-aem-desktop-release-local/auth/aem-desktop >> ~/.npmrc

jobs:
  build_runtime:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12.0.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - *ssh_keys
      - *artifactory_login
      - run:
          name: Creating Docker Runtime
          command: |
            echo "Creating Docker Runtime"

  build:
    working_directory: ~/repo
    machine:
        enabled: true
        docker_layer_caching: true
    steps:
      - checkout:
          path: ~/repo
      - *artifactory_login
      - attach_workspace:
          at: cache
      - run:
          name: Run npm tests
          command: |
            echo "Build Run npm tests"           
            npm install              
            npm test
            
  release:
    docker:
      - image: circleci/node:12.0.0
    steps:
      - checkout
      - *ssh_keys
      - *artifactory_login
      - run:
          name: Releasing module - npm publish and create git tags
          command: |
            cd ~
            git clone git@git.corp.adobe.com:nui/circleci.git
            cd circleci
            git pull
            git checkout 27Mar-test
            cat release.sh
            ./release.sh

      - persist_to_workspace:
          root: ~/tmpDir
          paths:
            - env-vars

  dependent-version-update:
    docker:
      - image: circleci/node:12.16.1
    steps:
      - checkout
      - *ssh_keys
      - *artifactory_login
      - attach_workspace:
          at: tmpDir
      - run: cat tmpDir/env-vars >> $BASH_ENV
      - run:
          name: Create PR for dependent repos to update version
          command: |
            cd ~
            git clone git@git.corp.adobe.com:nui/circleci.git
            cd circleci
            git pull
            git checkout 27Mar-test
            cat dependent-version-update.sh
            ./dependent-version-update.sh
          

  validate_config:
    working_directory: ~/validate
    docker:
      - image: circleci/node:12.0.0
    steps:
      - checkout:
          path: ~/validate/repo
      - run:
          name: compare with central cci config
          command: |
            cd ~/validate
            git clone git@git.corp.adobe.com:nui/circleci.git
            # git clone https://$GITHUB_TOKEN@git.corp.adobe.com/circleci.git
            cd circleci
            git checkout $CIRCLE_BRANCH
            git branch
            #comparing ~/validate/repo/.circleci/config.yml to ~/validate/circleci/config.yml
            cmp -s ~/validate/repo/.circleci/config.yml ~/validate/circleci/config.yml || { echo 'circleci/config.yml not in sync'; exit 1; }
            
# validate_config job currently not used
workflows:
    version: 2
    build:
        jobs:
        - build_runtime:
            context: nui
        - build:
            context: nui
        - release:
            requires:
              - build_runtime
              - build
            filters:
              branches:
                only: master
            context: nui
        - hold-dependent-version-update:
            type: approval # requires that an in-app button be clicked by an appropriate member of the project to continue.
            requires:
              - release
        - dependent-version-update:
            requires:
              - hold-dependent-version-update
            context: nui
  #        - validate_config:
  #            context: nui
